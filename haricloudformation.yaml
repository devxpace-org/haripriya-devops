AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation

Resources:
  HaripriyaEC2Instance1:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-09988af04120b3591
      InstanceType: t2.medium
      KeyName: hari-priya
      Volumes:
        - Device: /dev/sdh
          VolumeId: !Ref HaripriyaEBSVolume1

  HaripriyaEC2Instance2:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-09988af04120b3591
      InstanceType: t2.medium
      KeyName: hari-priya
      Volumes:
        - Device: /dev/sdh
          VolumeId: !Ref HaripriyaEBSVolume2

  HaripriyaEBSVolume1:
    Type: 'AWS::EC2::Volume'
    Properties:
      AvailabilityZone: "us-east-1a"
      Size: 5
      Tags:
        - Key: Name
          Value: MyEBSVolume

  HaripriyaEBSVolume2:
    Type: 'AWS::EC2::Volume'
    Properties:
      AvailabilityZone: "us-east-1a"
      Size: 5
      Tags:
        - Key: Name
          Value: MyEBSVolume
  
  HaripriyaS3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: "haripriya-devxpace-s3bucket"
  HaripriyaS3Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: haripriya-s3-access-policy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - s3.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: Role to provide access to S3
      Policies:
        - PolicyName: haripriya-read-write-s3-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                - s3:GetBucketLocation
                - s3:ListAllMyBuckets
                Resource: "*"
              - Effect: Allow
                Action:
                - s3:ListBucket
                Resource:
                - arn:aws:s3:::test
              - Effect: Allow
                Action:
                - s3:PutObject
                - s3:GetObject
                - s3:DeleteObject
                Resource:
                - !Sub arn:aws:s3:::${HaripriyaS3Bucket}
                - !Sub arn:aws:s3:::${HaripriyaS3Bucket}/*

  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: haripriyalb
      Scheme: internet-facing
      Type: network
      Subnets:
        - subnet-03562d73c3b891294

  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: haripriyatg
      Port: 80
      Protocol: TCP
      VpcId: vpc-0852d7d06b55e3ed7
      Targets:
        - Id: !Ref HaripriyaEC2Instance1
          Port: 80
        - Id: !Ref HaripriyaEC2Instance2
          Port: 80

  Listener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: TCP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup